{"ast":null,"code":"import axios from \"axios\";\nimport { setAuthToken } from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\"; //setting user\n\nexport const SETTING_USER = 'SETTING_USER';\nexport const SETTING_USER_PENDING = 'SETTING_USER_PENDING';\nexport const SETTING_USER_FULFILLED = 'SETTING_USER_FULFILLED'; //set current user\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const SET_CURRENT_PENDING = 'SET_CURRENT_PENDING';\nexport const SET_CURRENT_FULFILLED = 'SET_CURRENT_FULFILLED'; //error handling\n\nexport const GET_ERROR = 'GET_ERROR';\nexport const GET_ERROR_PENDING = 'GET_ERROR_PENDING';\nexport const GET_ERROR_FULFILLED = 'GET_ERROR_FULFILLED';\nexport const GET_ERROR_REJECTED = 'GET_ERROR_REJECTED'; //register user\n\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_PENDING = 'REGISTER_USER_PENDING';\nexport const REGISTER_USER_FULFILLED = 'REGISTER_USER_FULFILLED'; //message state\n\nexport const MSG_STATE_ERROR = 'MSG_STATE_ERROR';\nexport const MSG_STATE_SUCCESS = 'MSG_STATE_SUCCESS'; //component Loading\n\nexport const COMP_LOADING_PENDING = 'COMP_LOADING_PENDING';\nexport const COMP_LOADING_FULFILLED = 'COMP_LOADING_FULFILLED'; //fetching blogs\n\nexport const GET_BLOGS = 'GET_BLOGS';\nexport const GET_BLOGS_PENDING = 'GET_BLOGS_PENDING';\nexport const GET_BLOGS_FULFILLED = 'GET_BLOGS_FULFILLED'; //add blogs\n\nexport const ADD_BLOGS = 'ADD_BLOGS';\nexport const ADD_BLOGS_PENDING = 'ADD_BLOGS_PENDING';\nexport const ADD_BLOGS_FULFILLED = 'ADD_BLOGS_FULFILLED'; //delete blog\n\nexport const DELETE_BLOG = 'DELETE_BLOG';\nexport const DELETE_BLOG_PENDING = 'DELETE_BLOG_PENDING';\nexport const DELETE_BLOG_FULFILLED = 'DELETE_BLOG_FULFILLED'; //fetch one blog\n\nexport const FETCH_ONE_BLOG = 'FETCH_ONE_BLOG';\nexport const FETCH_ONE_BLOG_PENDING = 'FETCH_ONE_BLOG_PENDING';\nexport const FETCH_ONE_BLOG_FULFILLED = 'FETCH_ONE_BLOG_FULFILLED'; //edit Blogs\n\nexport const EDIT_BLOG = 'EDIT_BLOG';\nexport const EDIT_BLOG_PENDING = 'EDIT_BLOG_PENDING';\nexport const EDIT_BLOG_FULFILLED = 'EDIT_BLOG_FULFILLED'; //get error\n\nexport const GET_ERRORS = 'GET_ERRORS'; //loging\n\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING'; // Register User\n\nexport const registerUser = data => {\n  return {\n    type: REGISTER_USER,\n    payload: axios.post('http://localhost:5000/api/users/register', data)\n  };\n}; // fetching blogs\n\nexport const fetchBlogs = () => {\n  return {\n    type: GET_BLOGS,\n    payload: axios.get('http://localhost:5000/api/blog/blogs')\n  };\n}; // adding blogs\n\nexport const addBlogs = data => {\n  return {\n    type: ADD_BLOGS,\n    payload: axios.post('http://localhost:5000/api/blog/newBlog', data)\n  };\n}; // delete blogs\n\nexport const deleteBlog = id => {\n  return {\n    type: DELETE_BLOG,\n    payload: axios.delete(\"http://localhost:5000/api/blog/blogs/\".concat(id))\n  };\n};\nexport const fetchOneBlog = id => {\n  return {\n    type: FETCH_ONE_BLOG,\n    payload: axios.get(\"http://localhost:5000/api/blog/\".concat(id))\n  };\n};\nexport const editBlog = (data, id) => {\n  return {\n    type: EDIT_BLOG,\n    payload: axios.put(\"http://localhost:5000/api/blog/blogs/\".concat(id), data)\n  };\n}; //login route\n\nexport const loginUser = userData => dispatch => {\n  axios.post(\"http://localhost:5000/api/users/login\", userData).then(res => {\n    const token = res.data.token;\n    localStorage.setItem(\"jwtToken\", token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/home/vivek/Documents/Web projets/react/auth/server/client/src/store/actions/authTypes.js"],"names":["axios","setAuthToken","jwt_decode","SETTING_USER","SETTING_USER_PENDING","SETTING_USER_FULFILLED","SET_CURRENT_USER","SET_CURRENT_PENDING","SET_CURRENT_FULFILLED","GET_ERROR","GET_ERROR_PENDING","GET_ERROR_FULFILLED","GET_ERROR_REJECTED","REGISTER_USER","REGISTER_USER_PENDING","REGISTER_USER_FULFILLED","MSG_STATE_ERROR","MSG_STATE_SUCCESS","COMP_LOADING_PENDING","COMP_LOADING_FULFILLED","GET_BLOGS","GET_BLOGS_PENDING","GET_BLOGS_FULFILLED","ADD_BLOGS","ADD_BLOGS_PENDING","ADD_BLOGS_FULFILLED","DELETE_BLOG","DELETE_BLOG_PENDING","DELETE_BLOG_FULFILLED","FETCH_ONE_BLOG","FETCH_ONE_BLOG_PENDING","FETCH_ONE_BLOG_FULFILLED","EDIT_BLOG","EDIT_BLOG_PENDING","EDIT_BLOG_FULFILLED","GET_ERRORS","START_LOADING","STOP_LOADING","registerUser","data","type","payload","post","fetchBlogs","get","addBlogs","deleteBlog","id","delete","fetchOneBlog","editBlog","put","loginUser","userData","dispatch","then","res","token","localStorage","setItem","decoded","setCurrentUser","catch","err","response","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {setAuthToken} from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\n//setting user\nexport const SETTING_USER = 'SETTING_USER';\nexport const SETTING_USER_PENDING = 'SETTING_USER_PENDING';\nexport const SETTING_USER_FULFILLED = 'SETTING_USER_FULFILLED';\n\n//set current user\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const SET_CURRENT_PENDING = 'SET_CURRENT_PENDING';\nexport const SET_CURRENT_FULFILLED = 'SET_CURRENT_FULFILLED';\n\n//error handling\nexport const GET_ERROR = 'GET_ERROR';\nexport const GET_ERROR_PENDING = 'GET_ERROR_PENDING';\nexport const GET_ERROR_FULFILLED = 'GET_ERROR_FULFILLED';\nexport const GET_ERROR_REJECTED = 'GET_ERROR_REJECTED';\n\n//register user\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_PENDING = 'REGISTER_USER_PENDING';\nexport const REGISTER_USER_FULFILLED = 'REGISTER_USER_FULFILLED';\n\n//message state\nexport const MSG_STATE_ERROR = 'MSG_STATE_ERROR';\nexport const MSG_STATE_SUCCESS = 'MSG_STATE_SUCCESS';\n\n//component Loading\nexport const COMP_LOADING_PENDING = 'COMP_LOADING_PENDING';\nexport const COMP_LOADING_FULFILLED = 'COMP_LOADING_FULFILLED';\n\n//fetching blogs\nexport const GET_BLOGS = 'GET_BLOGS';\nexport const GET_BLOGS_PENDING = 'GET_BLOGS_PENDING';\nexport const GET_BLOGS_FULFILLED = 'GET_BLOGS_FULFILLED';\n\n//add blogs\nexport const ADD_BLOGS = 'ADD_BLOGS';\nexport const ADD_BLOGS_PENDING = 'ADD_BLOGS_PENDING';\nexport const ADD_BLOGS_FULFILLED = 'ADD_BLOGS_FULFILLED';\n\n//delete blog\nexport const DELETE_BLOG = 'DELETE_BLOG';\nexport const DELETE_BLOG_PENDING = 'DELETE_BLOG_PENDING';\nexport const DELETE_BLOG_FULFILLED = 'DELETE_BLOG_FULFILLED';\n\n//fetch one blog\nexport const FETCH_ONE_BLOG = 'FETCH_ONE_BLOG';\nexport const FETCH_ONE_BLOG_PENDING = 'FETCH_ONE_BLOG_PENDING';\nexport const FETCH_ONE_BLOG_FULFILLED = 'FETCH_ONE_BLOG_FULFILLED';\n\n//edit Blogs\nexport const EDIT_BLOG = 'EDIT_BLOG';\nexport const EDIT_BLOG_PENDING = 'EDIT_BLOG_PENDING';\nexport const EDIT_BLOG_FULFILLED = 'EDIT_BLOG_FULFILLED';\n\n//get error\nexport const GET_ERRORS = 'GET_ERRORS';\n\n//loging\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\n\n// Register User\nexport const registerUser = (data) => {\n    return {\n      type: REGISTER_USER,\n      payload: axios.post('http://localhost:5000/api/users/register',data)\n    }\n};\n\n// fetching blogs\nexport const fetchBlogs = () => {\n  return {\n    type:GET_BLOGS,\n    payload: axios.get('http://localhost:5000/api/blog/blogs')\n  }\n}\n\n// adding blogs\nexport const addBlogs = (data) => {\n  return {\n    type:ADD_BLOGS,\n    payload: axios.post('http://localhost:5000/api/blog/newBlog',data)\n  }\n}\n\n// delete blogs\nexport const deleteBlog = (id) => {\n  return {\n    type:DELETE_BLOG,\n    payload: axios.delete(`http://localhost:5000/api/blog/blogs/${id}`)\n  }\n}\n\nexport const fetchOneBlog = (id) => {\n  return {\n    type:FETCH_ONE_BLOG,\n    payload: axios.get(`http://localhost:5000/api/blog/${id}`)\n  }\n}\n\nexport const editBlog = (data, id) => {\n  return {\n    type:EDIT_BLOG,\n    payload: axios.put(`http://localhost:5000/api/blog/blogs/${id}`,data)\n  }\n}\n\n//login route\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"http://localhost:5000/api/users/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};"]},"metadata":{},"sourceType":"module"}