{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _objectSpread from \"/home/vivek/Documents/Web projets/react/auth/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/vivek/Documents/Web projets/react/auth/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vivek/Documents/Web projets/react/auth/server/client/src/containers/Register/Register.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from '../../store/actions/authTypes';\nimport Container from '@material-ui/core/Container';\nimport { LandingNavbar } from '../../components/Navbar/Navbar';\n\nconst RegisterForm = ({\n  form,\n  history\n}) => {\n  const dispatch = useDispatch();\n  const getFieldDecorator = form.getFieldDecorator;\n\n  const _useState = useState({\n    confirmDirty: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const signupLoading = useSelector(state => state.registerData.loading);\n  const signupErrorData = useSelector(state => state.registerData.error.email);\n  const signupUserData = useSelector(state => state.registerData.data.name);\n  const errMsg = useSelector(state => state.registerData.errMsg);\n  const successMsg = useSelector(state => state.registerData.successMsg);\n  useEffect(() => {\n    if (errMsg) {\n      errormsg();\n      dispatch({\n        type: 'MSG_STATE_ERROR'\n      });\n    } else if (successMsg) {\n      successmsg();\n      dispatch({\n        type: 'MSG_STATE_SUCCESS'\n      });\n      form.resetFields();\n      history.push('/');\n    }\n  }, [signupLoading === true]);\n\n  const compareToFirstPassword = (rule, value, callback, props) => {\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  const validateToNextPassword = (rule, value, callback, props) => {\n    if (value && state.confirmDirty) {\n      form.validateFields(['confirm'], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  const handleConfirmBlur = e => {\n    const value = e.target.value;\n    setState(_objectSpread({}, state, {\n      confirmDirty: state.confirmDirty || !!value\n    }));\n  };\n\n  const errormsg = () => {\n    if (signupErrorData.length) _message.error(\"\".concat(signupErrorData));\n  };\n\n  const successmsg = () => {\n    let showMsg = () => {\n      return new Promise(resolve => {\n        resolve(_message.success(\"Welcome \".concat(signupUserData, \", Please login to continue\"), 8));\n      });\n    };\n\n    let enableLoading = () => {\n      return new Promise(resolve => {\n        resolve(dispatch({\n          type: 'COMP_LOADING_PENDING'\n        }));\n      });\n    };\n\n    let desableLoading = () => {\n      return new Promise(resolve => {\n        resolve(dispatch({\n          type: 'COMP_LOADING_FULFILLED'\n        }));\n      });\n    };\n\n    showMsg().then(() => {\n      return enableLoading();\n    }).then(() => {\n      return desableLoading();\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        dispatch(registerUser(values));\n      }\n    });\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(LandingNavbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(_Row, {\n    type: \"flex\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(_Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Welcome to 3D world\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Please Register to continue\"), React.createElement(_Form, {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(_Form.Item, {\n    label: \"Name\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, getFieldDecorator('name', {\n    rules: [{\n      required: true,\n      message: 'Please input your name!'\n    }]\n  })(React.createElement(_Input, {\n    prefix: React.createElement(_Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }),\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), React.createElement(_Form.Item, {\n    label: \"Email\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      required: true,\n      message: 'Please input your email!'\n    }, {\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }]\n  })(React.createElement(_Input, {\n    prefix: React.createElement(_Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }),\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }))), React.createElement(_Form.Item, {\n    label: \"Password\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }, {\n      validator: validateToNextPassword\n    }, {\n      min: 6,\n      message: 'Password must be of 6 letters'\n    }]\n  })(React.createElement(_Input.Password, {\n    prefix: React.createElement(_Icon, {\n      type: \"lock\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }),\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))), React.createElement(_Form.Item, {\n    label: \"Confirm Password\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, getFieldDecorator('password2', {\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, {\n      validator: compareToFirstPassword\n    }, {\n      min: 6,\n      message: 'Password must be of 6 letters'\n    }]\n  })(React.createElement(_Input.Password, {\n    onBlur: handleConfirmBlur,\n    prefix: React.createElement(_Icon, {\n      type: \"lock\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }),\n    placeholder: \"Confirm password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }))), React.createElement(_Button, {\n    type: \"primary\",\n    block: true,\n    loading: signupLoading,\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Register\")))))));\n};\n\nexport const Register = _Form.create({\n  name: 'registration'\n})(RegisterForm);","map":{"version":3,"sources":["/home/vivek/Documents/Web projets/react/auth/server/client/src/containers/Register/Register.js"],"names":["React","useState","useEffect","useDispatch","useSelector","registerUser","Container","LandingNavbar","RegisterForm","form","history","dispatch","getFieldDecorator","confirmDirty","state","setState","signupLoading","registerData","loading","signupErrorData","error","email","signupUserData","data","name","errMsg","successMsg","errormsg","type","successmsg","resetFields","push","compareToFirstPassword","rule","value","callback","props","getFieldValue","validateToNextPassword","validateFields","force","handleConfirmBlur","e","target","length","showMsg","Promise","resolve","success","enableLoading","desableLoading","then","handleSubmit","preventDefault","err","values","textAlign","fontWeight","rules","required","message","color","validator","min","Register","create"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Form, Icon, Input, Button, Card, Row, Col, message } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from '../../store/actions/authTypes';\nimport Container from '@material-ui/core/Container';\nimport { LandingNavbar } from '../../components/Navbar/Navbar';\n\n\nconst RegisterForm = ({form, history}) => {\n  const dispatch = useDispatch()\n    const { getFieldDecorator } = form;\n    const [state, setState] = useState({\n      confirmDirty: false\n    });\n\n    const signupLoading = useSelector(state => state.registerData.loading);\n    const signupErrorData = useSelector(state => state.registerData.error.email);\n    const signupUserData= useSelector(state => state.registerData.data.name);\n    const errMsg= useSelector(state => state.registerData.errMsg);\n    const successMsg= useSelector(state => state.registerData.successMsg);\n\n    useEffect(()=>{\n      if(errMsg){\n        errormsg()\n        dispatch({ type: 'MSG_STATE_ERROR' })\n      } else if(successMsg){\n        successmsg()\n        dispatch({ type: 'MSG_STATE_SUCCESS' })\n        form.resetFields()\n        history.push('/')\n      }\n    },[signupLoading === true])\n\n    const compareToFirstPassword = (rule, value, callback, props) => {\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    const validateToNextPassword = (rule, value, callback, props) => {\n      if (value && state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n\n    const handleConfirmBlur = e => {\n      const { value } = e.target;\n      setState({ ...state, confirmDirty: state.confirmDirty || !!value });\n    };\n\n    const errormsg = () => {\n      if(signupErrorData.length)\n      message.error(`${signupErrorData}`);\n    };\n\n    const successmsg = () => {\n\n      let showMsg = () => {\n        return new Promise(resolve => {\n          resolve(message.success(`Welcome ${signupUserData}, Please login to continue`,8))\n        })\n      }\n\n      let enableLoading = () => {\n        return new Promise(resolve => {\n          resolve(dispatch({type:'COMP_LOADING_PENDING'}))\n        })\n      }\n\n      let desableLoading = () => {\n        return new Promise(resolve => {\n          resolve(dispatch({type:'COMP_LOADING_FULFILLED'}))\n        })\n      }\n\n      showMsg().then(()=>{\n        return enableLoading()\n      }).then(()=>{\n        return desableLoading()\n      })\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      form.validateFields((err, values) => {\n        if (!err) {\n          dispatch(registerUser(values))       \n        }\n      });\n    };\n\n    return (\n      <React.Fragment>\n        <LandingNavbar />\n        <Container>\n          <Row type=\"flex\" justify=\"center\">\n            <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n              <Card>\n                <h2 style={{textAlign:\"center\", fontWeight:\"bold\"}}>Welcome to 3D world</h2>\n                <p>Please Register to continue</p>\n                <Form onSubmit={handleSubmit} className=\"login-form\">\n                    <Form.Item label=\"Name\" hasFeedback>\n                      {getFieldDecorator('name', {\n                        rules: [\n                          {required: true, message: 'Please input your name!' },\n                        ],\n                      })(\n                        <Input\n                          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                          placeholder=\"Name\"\n                        />,\n                      )}\n                    </Form.Item>\n                    <Form.Item label=\"Email\" hasFeedback>\n                      {getFieldDecorator('email', {\n                        rules: [\n                          {required: true, message: 'Please input your email!' },\n                          {type: 'email', message: 'The input is not valid E-mail!'}\n                        ],\n                      })(\n                        <Input\n                          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                          placeholder=\"Email\"\n                        />,\n                      )}\n                    </Form.Item>\n                    <Form.Item label=\"Password\" hasFeedback>\n                      {getFieldDecorator('password', {\n                        rules: [\n                          {\n                            required: true,\n                            message: 'Please input your password!',\n                          },\n                          {\n                            validator: validateToNextPassword,\n                          },\n                          {\n                            min:6,\n                            message: 'Password must be of 6 letters',\n                          },\n                        ],\n                      })(<Input.Password\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Password\" \n                      />)}\n                    </Form.Item>\n                    <Form.Item label=\"Confirm Password\" hasFeedback>\n                      {getFieldDecorator('password2', {\n                        rules: [\n                          {\n                            required: true,\n                            message: 'Please confirm your password!',\n                          },\n                          {\n                            validator: compareToFirstPassword,\n                          },\n                          {\n                            min:6,\n                            message: 'Password must be of 6 letters',\n                          },\n                        ],\n                      })(<Input.Password onBlur={handleConfirmBlur} \n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Confirm password\"/>)}\n                    </Form.Item>\n                    <Button type=\"primary\" block loading={signupLoading} htmlType=\"submit\" className=\"login-form-button\">\n                        Register\n                    </Button>\n                </Form>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    )\n}\n\nexport const Register = Form.create({name: 'registration'})(RegisterForm);"]},"metadata":{},"sourceType":"module"}